#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

    // Home row mods
    #define _F_SFT &hm LSHFT F  // Shift on index fingers
    #define _J_SFT &hm RSHFT J
    #define _A_CMD &hm LGUI A   // Command on middle fingers
    #define _se_CMD &hm RGUI SEMI
    #define _D_CTL &hm LCTRL D  // Control on index down
    #define _K_CTL &hm RCTRL K
    #define _S_OPT &hm LALT S   // Option on ring finger
    #define _L_OPT &hm RALT L
    #define _M_SPC &lt 4 SPACE
    #define _N_BSP &lt 5 BSPC
    #define _S_ENT &lt 6 ENTER

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog 1                                                                       &mo 3 &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &none &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   _A_CMD    _S_OPT   _D_CTL   _F_SFT     &kp G  &none           &kp DEL &kp LALT &none &none &kp LGUI  &kp RCTRL           &none &kp H  _J_SFT _K_CTL    _L_OPT   _se_CMD  &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B         &none    &none     &kp HOME &none &none &kp PG_UP &none     &none           &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                _M_SPC   &kp TAB   &kp END              &kp PG_DN _S_ENT _N_BSP &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                                       &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &none &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp DEL &kp LALT &none &none &kp LGUI  &kp RCTRL           &none &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B         &none    &none     &kp HOME &none &none &kp PG_UP &none     &none           &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                _M_SPC   &kp TAB    &kp END              &kp PG_DN &kp ENTER &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo 2
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                                       &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &none &none &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none        &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR &none &none &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
    move {
      bindings = <
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &none &none &trans &trans        &none &kp LEFT &kp DOWN &kp UP &kp RIGHT  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none        &kp HOME &kp PG_DN &kp PG_UP &kp END &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &kp ENTER &kp BSPC            &trans &trans &trans  &trans  &trans
      >;
    };
    num {
      bindings = <
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp LBKT &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp RBKT &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp SEMI &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp EQUAL &none        &trans &trans &none &none &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp GRAVE &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp BSLH &none  &none  &trans &none &none &trans &none  &none        &trans &trans &trans &trans  &trans  &trans
        &trans &trans &kp DOT &kp KP_N0 &kp MINUS               &trans &kp MINUS &trans             &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    sym {
      bindings = <
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp LBRC &kp AMPS &kp ASTRK &kp LPAR &kp RBRC &none                                                    &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS &none   &trans &trans &none &none &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &kp TILDE &kp EXCL &kp AT &kp HASH &kp PIPE      &none  &none  &trans &none &none &trans &none  &none        &trans &trans &trans &trans  &trans  &trans
        &trans &trans &kp LPAR &kp RPAR &kp UNDER               &trans &kp UNDER &trans             &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
  };
};
